{"version":3,"file":"component---src-pages-main-js-7a5eb7eacaa55887bd19.js","mappings":"wOAKA,MAAMA,EAAYC,EAAAA,GAAOC,IAAG,gIAQtBC,EAASF,EAAAA,GAAOG,OAAM,2JAQtBC,EAAUJ,EAAAA,GAAOK,IAAG,kEAKpBC,EAAUN,EAAAA,GAAOC,IAAG,gHASpBM,EAAUP,EAAAA,GAAOQ,GAAE,mWAqBnBC,EAAYT,EAAAA,GAAOC,IAAG,kEAKtBS,EAAaV,EAAAA,GAAOW,OAAM,qGAO1BC,EAAcZ,EAAAA,GAAOa,MAAK,uHA+B1BC,GAxBmBd,EAAAA,GAAOC,IAAG,0CAInBD,EAAAA,GAAOC,IAAG,2KACdc,GAAWA,EAAMC,OAAS,QAAU,MAElCD,GAAWA,EAAMC,OAAS,OAAS,MAC9BD,GAAWA,EAAMC,OAAS,iBAAmB,SAMpChB,EAAAA,GAAOW,OAAM,iJAG9BI,GAAWA,EAAMC,OAAS,QAAU,SAO/BhB,EAAAA,GAAOC,IAAG,4DAKpBgB,EAAejB,EAAAA,GAAOC,IAAG,oGAOzBiB,EAAelB,EAAAA,GAAOC,IAAG,8NAYzBkB,EAAenB,EAAAA,GAAOoB,GAAE,6CAIxBC,EAAYrB,EAAAA,GAAOC,IAAG,iGAOtBqB,EAAYtB,EAAAA,GAAOC,IAAG,8NAUtBsB,EAAmBvB,EAAAA,GAAOC,IAAG,6GAOlBD,EAAAA,GAAOQ,GAAE,4DAKTR,EAAAA,GAAOwB,GAAE,8DA2G1B,UAtGiB,KACf,MAAM,EAACC,EAAa,EAAEC,IAAkBC,EAAAA,EAAAA,WAAS,IAC3C,EAACC,EAAa,EAAEC,IAAoBF,EAAAA,EAAAA,UAAS,IA+CnD,OACE,gBAAC5B,EAAS,KACR,gBAACG,EAAM,KACL,gBAACE,EAAO,KACN,sBAAI0B,MAAO,CAAEC,YAAa,SAAU,4BACpC,gBAACzB,EAAO,KAAC,QACT,gBAACA,EAAO,KAAC,UAEP,gBAACC,EAAO,KACN,0BAAI,aACJ,0BAAI,aACJ,0BAAI,eAGR,gBAACD,EAAO,KAAC,iBAEX,gBAACG,EAAS,KACR,gBAACG,EAAW,CAACoB,KAAK,OAAOC,YAAY,cACrC,gBAACvB,EAAU,KACT,gBAAC,MAAU,CAACwB,KAAM,MAEpB,gBAACxB,EAAU,KACT,gBAAC,MAAM,CAACwB,KAAM,MAEhB,gBAACxB,EAAU,KACT,gBAAC,MAAM,CAACwB,KAAM,QAKlB,gBAACpB,EAAO,KACN,gBAACG,EAAY,KACV,CAAC,WAAY,eAAgB,aAAc,QAAS,aAAc,aAAc,OAAOkB,KAAI,CAACC,EAAUC,IACrG,gBAACnB,EAAY,CAACoB,IAAKD,GAAQD,MAG/B,gBAACjB,EAAY,KAAC,kBACd,gBAACE,EAAS,KACPkB,MAAMC,KAAK,CAAEC,OAAQ,IAAKN,KAAI,CAACO,EAAGL,IACjC,gBAACf,EAAS,CAACgB,IAAKD,GACd,gBAACd,EAAgB,MACjB,0BAAI,eAAac,EAAQ,GACzB,yBAAG,qBAAmBA,EAAQ,GAC9B,yBAAG,KAAGM,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAAG,YAM3C,C","sources":["webpack://gatsby-starter-default/./src/pages/main.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FiBox, FiUser, FiSettings, FiBell, FiSearch } from \"react-icons/fi\";\nimport { FaAngleDoubleLeft, FaAngleDoubleRight } from \"react-icons/fa\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #ddd;\n`;\n\nconst NavMenu = styled.nav`\n  display: flex;\n  align-items: center;\n`;\n\nconst NavItem = styled.div`\n  margin: 0 15px;\n  position: relative;\n\n  &:hover > ul {\n    display: block;\n  }\n`;\n\nconst SubMenu = styled.ul`\n  display: none;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  background-color: white;\n  border: 1px solid #ddd;\n  padding: 10px 0;\n  list-style: none;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n\n  li {\n    padding: 8px 15px;\n    white-space: nowrap;\n\n    &:hover {\n      background-color: #f0f0f0;\n    }\n  }\n`;\n\nconst RightMenu = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  margin: 0 10px;\n  cursor: pointer;\n`;\n\nconst SearchInput = styled.input`\n  margin-right: 15px;\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nconst SidebarContainer = styled.div`\n  display: flex;\n`;\n\nconst Sidebar = styled.div`\n  width: ${(props) => (props.isOpen ? \"250px\" : \"0\")};\n  transition: width 0.3s;\n  padding: ${(props) => (props.isOpen ? \"20px\" : \"0\")};\n  border-right: ${(props) => (props.isOpen ? \"1px solid #ddd\" : \"none\")};\n  overflow: hidden;\n  min-height: 100vh;\n  position: relative;\n`;\n\nconst ToggleSidebarButton = styled.button`\n  position: fixed;\n  top: 10px;\n  left: ${(props) => (props.isOpen ? \"265px\" : \"10px\")};\n  background: none;\n  border: none;\n  cursor: pointer;\n  z-index: 1;\n`;\n\nconst Content = styled.div`\n  flex-grow: 1;\n  padding: 20px;\n`;\n\nconst CategoryList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n\nconst CategoryItem = styled.div`\n  width: 150px;\n  height: 100px;\n  background-color: #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst SectionTitle = styled.h2`\n  margin-top: 30px;\n`;\n\nconst AssetList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nconst AssetCard = styled.div`\n  width: calc(33.333% - 20px);\n  background-color: #f8f8f8;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  text-align: center;\n`;\n\nconst PlaceholderImage = styled.div`\n  width: 100%;\n  height: 150px;\n  background-color: #ccc;\n  margin-bottom: 10px;\n`;\n\nconst TreeView = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst TreeNode = styled.li`\n  margin: 5px 0;\n  cursor: pointer;\n`;\n\nconst HomePage = () => {\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const [expandedNodes, setExpandedNodes] = useState([]);\n\n  const toggleNode = (node) => {\n    setExpandedNodes((prevState) =>\n      prevState.includes(node)\n        ? prevState.filter((n) => n !== node)\n        : [...prevState, node]\n    );\n  };\n\n  const renderTree = (data) => {\n    return data.map((item) => (\n      <TreeNode key={item.name}>\n        <div onClick={() => toggleNode(item.name)}>\n          {expandedNodes.includes(item.name) ? \"▼\" : \"►\"} {item.name}{\" \"}\n          {item.count && <span>({item.count})</span>}\n        </div>\n        {item.children && expandedNodes.includes(item.name) && (\n          <TreeView>{renderTree(item.children)}</TreeView>\n        )}\n      </TreeNode>\n    ));\n  };\n\n  const categories = [\n    {\n      name: \"All Categories\",\n      children: [\n        {\n          name: \"3D\",\n          children: [\n            {\n              name: \"Characters\",\n              count: 17814,\n              children: [\n                { name: \"Humanoids\", count: 6117 },\n                { name: \"Creatures\", count: 3658 },\n                { name: \"Animals\", count: 2979 },\n                { name: \"Robots\", count: 641 },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <Container>\n      <Header>\n        <NavMenu>\n          <h1 style={{ marginRight: \"30px\" }}>Digital Asset Management</h1>\n          <NavItem>Home</NavItem>\n          <NavItem>\n            Project\n            <SubMenu>\n              <li>Project 1</li>\n              <li>Project 2</li>\n              <li>Project 3</li>\n            </SubMenu>\n          </NavItem>\n          <NavItem>My Workspace</NavItem>\n        </NavMenu>\n        <RightMenu>\n          <SearchInput type=\"text\" placeholder=\"Search...\" />\n          <IconButton>\n            <FiSettings size={20} />\n          </IconButton>\n          <IconButton>\n            <FiBell size={20} />\n          </IconButton>\n          <IconButton>\n            <FiUser size={20} />\n          </IconButton>\n        </RightMenu>\n      </Header>\n      \n        <Content>\n          <CategoryList>\n            {[\"SHOP ALL\", \"ENVIRONMENTS\", \"CHARACTERS\", \"PROPS\", \"ANIMATIONS\", \"VEGETATION\", \"GUI\"].map((category, index) => (\n              <CategoryItem key={index}>{category}</CategoryItem>\n            ))}\n          </CategoryList>\n          <SectionTitle>Best 3D Assets</SectionTitle>\n          <AssetList>\n            {Array.from({ length: 6 }).map((_, index) => (\n              <AssetCard key={index}>\n                <PlaceholderImage />\n                <h3>Asset Title {index + 1}</h3>\n                <p>Asset description {index + 1}</p>\n                <p>$ {Math.floor(Math.random() * 300) + 20}.00</p>\n              </AssetCard>\n            ))}\n          </AssetList>\n        </Content>\n      \n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["Container","styled","div","Header","header","NavMenu","nav","NavItem","SubMenu","ul","RightMenu","IconButton","button","SearchInput","input","Content","props","isOpen","CategoryList","CategoryItem","SectionTitle","h2","AssetList","AssetCard","PlaceholderImage","li","isSidebarOpen","setSidebarOpen","useState","expandedNodes","setExpandedNodes","style","marginRight","type","placeholder","size","map","category","index","key","Array","from","length","_","Math","floor","random"],"sourceRoot":""}